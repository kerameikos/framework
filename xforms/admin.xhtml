<html xmlns="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xxforms="http://orbeon.org/oxf/xml/xforms" xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
	xmlns:res="http://www.w3.org/2005/sparql-results#" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:foaf="http://xmlns.com/foaf/0.1/"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:skos="http://www.w3.org/2004/02/skos/core#" xmlns:owl="http://www.w3.org/2002/07/owl#"
	xmlns:crm="http://www.cidoc-crm.org/cidoc-crm/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	xmlns:kid="https://kerameikos.org/id/" xmlns:kon="https://kerameikos.org/ontology#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
	xmlns:atom="http://www.w3.org/2005/Atom">
	<head>
		<title>Kerameikos: Administration</title>
		<link rel="stylesheet" href="/fr/style/bootstrap/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="/fr/style/form-runner-bootstrap-override.css" type="text/css" />
		<link rel="shortcut icon" href="/ops/images/orbeon-icon-16.ico" />
		<link rel="icon" href="/ops/images/orbeon-icon-16.png" type="image/png" />
		<link rel="stylesheet" href="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css" />
		<script type="text/javascript" src="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/apps/kerameikos/xforms/css/style.css" />

		<xforms:model>
			<xforms:instance id="rdf" xxforms:exclude-result-prefixes="#all">
				<rdf:RDF/>
			</xforms:instance>

			<xforms:instance id="config" xxforms:exclude-result-prefixes="#all">
				<xi:include href="../config.xml"/>
			</xforms:instance>

			<xforms:instance id="control-instance">
				<controls xmlns="">
					<id></id>
					<original_id></original_id>
					<save-trigger></save-trigger>
					<status></status>
					<!-- pagination -->
					<numFound>0</numFound>
					<page>1</page>
					<offset>0</offset>
					<limit>25</limit>
					<test/>
				</controls>
			</xforms:instance>

			<xforms:instance id="save-rdfxml-config">
				<config xmlns="">
					<url></url>
					<content-type>application/xml</content-type>
					<make-directories>false</make-directories>
					<append>false</append>
				</config>
			</xforms:instance>

			<xforms:instance id="dump">
				<dump xmlns=""></dump>
			</xforms:instance>

			<!-- for deleting an RDF file from the filesystem -->
			<xforms:instance id="delete-config">
				<config xmlns="">
					<delete>
						<url></url>
					</delete>
				</config>
			</xforms:instance>

			<!-- sparql update -->
			<xforms:instance id="sparqlUpdate-templates">
				<queries xmlns="">
					<query id="delete-id">
						<![CDATA[PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf:	<http://xmlns.com/foaf/0.1/>
PREFIX geo:	<http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX kon:	<https://kerameikos.org/ontology#>
PREFIX ontolex:	<http://www.w3.org/ns/lemon/ontolex#>
PREFIX org:	<http://www.w3.org/ns/org#>
PREFIX prov:	<http://www.w3.org/ns/prov#>
PREFIX skos:	<http://www.w3.org/2004/02/skos/core#>
DELETE {?s ?p ?o} WHERE { 
{<URI> geo:location ?s . ?s ?p ?o }
UNION {<URI> org:hasMembership ?s . ?s ?p ?o}
UNION {<URI> ontolex:otherForm ?s . ?s ?p ?o}
UNION {?prov foaf:topic <URI> .
	?prov ?hasActivity ?s .
	?s a prov:Activity . ?s ?p ?o}
UNION {<URI> skos:changeNote ?s . ?s ?p ?o}
UNION {<URI> ?p ?o . ?s ?p ?o . FILTER (?s = <URI>) }
}]]>
					</query>
					<query id="delete-all-ids">
						<![CDATA[PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dcterms:	<http://purl.org/dc/terms/>
PREFIX foaf:	<http://xmlns.com/foaf/0.1/>
PREFIX geo:	<http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX kon:	<https://kerameikos.org/ontology#>
PREFIX org:	<http://www.w3.org/ns/org#>
PREFIX prov:	<http://www.w3.org/ns/prov#>
PREFIX skos:	<http://www.w3.org/2004/02/skos/core#>
DELETE {?s ?p ?o} WHERE {
{?place rdf:type skos:Concept ; geo:location ?s . ?s ?p ?o }
UNION {?person rdf:type skos:Concept ; org:hasMembership ?s . ?s ?p ?o }
UNION {?s rdf:type prov:Activity . ?s ?p ?o}
UNION {?s rdf:type dcterms:ProvenanceStatement . ?s ?p ?o}
UNION {?s rdf:type prov:Entity . ?s ?p ?o}
UNION {?s rdf:type skos:Concept FILTER strStarts(str(?s), "https://kerameikos.org/id/") . ?s ?p ?o}
UNION {?s rdf:type skos:Concept FILTER strStarts(str(?s), "https://kerameikos.org/editor/") . ?s ?p ?o}}]]>
					</query>
				</queries>
			</xforms:instance>

			<xforms:instance id="sparqlUpdate">
				<query></query>
			</xforms:instance>

			<!-- sparql queries -->
			<xforms:instance id="sparqlQueries">
				<queries xmlns="">
					<query id="count-concepts">
						<![CDATA[PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX geo:	<http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX kid:	<https://kerameikos.org/id/>
PREFIX kon:	<https://kerameikos.org/ontology#>
PREFIX org:	<http://www.w3.org/ns/org#>
PREFIX skos:	<http://www.w3.org/2004/02/skos/core#>
SELECT (count(?uri) as ?count) WHERE {
  ?uri a skos:Concept ;
  skos:inScheme kid:}]]></query>
					<query id="query-all"><![CDATA[PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX geo:	<http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX kid:	<https://kerameikos.org/id/>
PREFIX kon:	<https://kerameikos.org/ontology#>
PREFIX org:	<http://www.w3.org/ns/org#>
PREFIX skos:	<http://www.w3.org/2004/02/skos/core#>
SELECT * WHERE {
  ?uri a skos:Concept ;
  		 skos:inScheme kid: ;
         skos:prefLabel ?label FILTER langMatches(lang(?label), "en") .
  ?uri skos:definition ?definition FILTER langMatches(lang(?definition), "en") 
  ?uri rdf:type ?type FILTER (str(?type) != 'http://www.w3.org/2004/02/skos/core#Concept')
} ORDER BY ?label LIMIT 25 OFFSET %OFFSET%]]></query>
				</queries>
			</xforms:instance>

			<xforms:instance id="sparqlQuery">
				<query xmlns=""></query>
			</xforms:instance>

			<xforms:instance id="sparqlResponse">
				<sparql xmlns="http://www.w3.org/2005/sparql-results#"/>
			</xforms:instance>

			<!-- Solr instances -->
			<xforms:instance id="addIndex">
				<add xmlns=""></add>
			</xforms:instance>
			<xforms:instance id="sendCommit">
				<commit></commit>
			</xforms:instance>
			<xforms:instance id="deleteId">
				<delete xmlns="">
					<id></id>
				</delete>
			</xforms:instance>
			<xforms:instance id="deleteAll">
				<delete xmlns="">
					<query>id:*</query>
				</delete>
			</xforms:instance>
			<xforms:instance id="optimizeIndex">
				<optimize></optimize>
			</xforms:instance>
			<xforms:instance id="solr-response">
				<response></response>
			</xforms:instance>

			<!-- ************* BINDINGS **********************-->
			<xforms:binding nodeset="instance('control-instance')">
				<xforms:bind nodeset="numFound" type="xs:integer"/>
				<xforms:bind nodeset="page" type="xs:integer"/>
				<xforms:bind nodeset="limit" type="xs:integer"/>
			</xforms:binding>

			<!-- ************* SPARQL SUBMISSIONS **********************-->
			<xforms:submission id="delete-graph" action="{instance('config')/sparql/update}" ref="instance('sparqlUpdate')" serialization="text/plain"
				replace="none" method="post" mediatype="application/sparql-update">
				<xforms:message ev:event="xforms-submit-error" level="modal">SPARQL update failed.</xforms:message>
			</xforms:submission>

			<xforms:submission id="post-new" action="{instance('config')/sparql/store}?default" ref="instance('rdf')" replace="none" method="post"
				mediatype="application/rdf+xml">
				<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">Successfully posted to endpoint.</xforms:setvalue>
				<xforms:message ev:event="xforms-submit-error" level="modal">Post to endpoint failed.</xforms:message>
			</xforms:submission>

			<xforms:submission id="submit-sparqlQuery" action="{instance('config')/sparql/query}?query={encode-for-uri(instance('sparqlQuery'))}"
				ref="instance('sparqlResponse')" replace="instance" method="get">
				<xforms:header>
					<xforms:name>Accept</xforms:name>
					<xforms:value>application/sparql-results+xml</xforms:value>
				</xforms:header>
				<xforms:message ev:event="xforms-submit-error" level="modal">
					A submission error occurred:
					<!--<xforms:output value="event('response-body')"/>-->
				</xforms:message> 
			</xforms:submission>

			<!-- ************************* SOLR SUBMISSIONS ************************** -->
			<!-- initiate transformation of all RDF/XML into Solr add doc -->
			<xforms:submission id="load-all-solr" serialization="none" method="get" action="/kerameikos/admin/all.solr" replace="instance" instance="addIndex">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">Unable to load generate Solr add doc for all IDs</xforms:message>
				</xforms:action>
			</xforms:submission>
			
			<!-- post instance to Solr -->
			<xforms:submission id="delete-all" action="{instance('config')/solr_published}update" ref="instance('deleteAll')" instance="deleteAll"
				replace="none" method="post">
				<xforms:send ev:event="xforms-submit-done" submission="submit-commit"/>
				<xforms:message ev:event="xforms-submit-error" level="modal">Failed to delete all Solr docs.</xforms:message>
			</xforms:submission>

			<xforms:submission id="post-to-solr" action="{instance('config')/solr_published}update" ref="instance('addIndex')" instance="addIndex"
				replace="instance" method="post">
				<xforms:message ev:event="xforms-submit-error" level="modal">Data Failed to POST to Solr. Index may be offline or URL is
					incorrect.</xforms:message>
				<xforms:send submission="submit-commit" ev:event="xforms-submit-done"/>
			</xforms:submission>

			<xforms:submission id="delete-id-from-solr" action="{instance('config')/solr_published}update" ref="instance('deleteId')" instance="deleteId"
				replace="instance" method="post">
				<xforms:message ev:event="xforms-submit-error" level="modal">Data Failed to POST to Solr. Index may be offline or URL is
					incorrect.</xforms:message>
				<xforms:send submission="submit-commit" ev:event="xforms-submit-done"/>
			</xforms:submission>

			<!-- send commit -->
			<xforms:submission id="submit-commit" action="{instance('config')/solr_published}update" ref="instance('sendCommit')" instance="sendCommit"
				replace="none" method="post">
				<xforms:message ev:event="xforms-submit-error" level="modal">Failed to commit to Solr index.</xforms:message>
			</xforms:submission>

			<xforms:submission id="optimize" action="{instance('config')/solr_published}update" ref="instance('optimizeIndex')" instance="optimizeIndex"
				replace="none" method="post">
				<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">Solr index flushed and reloaded.</xforms:setvalue>
				<xforms:message ev:event="xforms-submit-error" level="modal">Solr optimize failed.</xforms:message>
			</xforms:submission>

			<!-- ************************* LOAD RDF/XML ************************** -->
			<xforms:submission id="load-all-rdf" serialization="none" method="get" action="/kerameikos/kerameikos.org.rdf" replace="instance" instance="rdf">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">Unable to load RDF/XML from /kerameikos/kerameikos.org.rdf</xforms:message>
				</xforms:action>
			</xforms:submission>

			<xforms:submission id="load-rdf" serialization="none" method="get" action="/kerameikos/id/{instance('control-instance')/id}.rdf" replace="instance"
				instance="rdf">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">Unable to load RDF/XML from /kerameikos/id/{$id}.rdf</xforms:message>
				</xforms:action>
			</xforms:submission>

			<!-- ********** XFORMS-MODEL-CONSTRUCT-DONE ********** -->
			<xforms:action ev:event="xforms-model-construct-done">
				<!-- first get the total count of skos:Concepts -->
				<xforms:setvalue ref="instance('sparqlQuery')" value="instance('sparqlQueries')/query[@id='count-concepts']"/>
				<xforms:send submission="submit-sparqlQuery"/>
				
				<xforms:setvalue ref="instance('control-instance')/numFound"
					value="instance('sparqlResponse')/descendant::res:binding[@name='count']/res:literal"/>
				
				<!-- then get first page from SPARQL -->
				<xforms:setvalue ref="instance('sparqlQuery')"
					value="replace(instance('sparqlQueries')/query[@id='query-all'], '%OFFSET%', instance('control-instance')/offset)"/>
				<xforms:send submission="submit-sparqlQuery"/>
			</xforms:action>
		</xforms:model>
	</head>

	<body>
		<xforms:var name="display_path">../</xforms:var>
		<div class="container-fluid">
			<div class="row">
				<div class="col-md-12">
					<xforms:group ref=".[string-length(instance('control-instance')/status) &gt; 0]">
						<div class="alert-success alert alert-box">
							<p>
								<span class="glyphicon glyphicon-info-sign"></span>
								<strong>Status:</strong>
								<xforms:output ref="instance('control-instance')/status"/>
							</p>
						</div>
					</xforms:group>
				</div>
			</div>
			<div class="row">
				<div class="col-md-9">
					<h1>Kerameikos Admin</h1>		
					
					<p><a href="edit/"><span class="glyphicon glyphicon-file"></span> Create New Concept</a></p>
					<xforms:group ref="instance('sparqlResponse')">
						<xforms:var name="numFound" select="instance('control-instance')/numFound"/>
						<xforms:group ref=".[$numFound &gt; 0]">
							<!-- pagination variables -->
							<xforms:var name="limit" select="instance('control-instance')/limit"/>
							<xforms:var name="page" select="instance('control-instance')/page"/>
							<xforms:var name="next" select="$page + 1"/>
							<xforms:var name="previous" select="if ($page &gt;= 1) then $page - 1 else 1"/>
							<xforms:var name="current" select="$page"/>
							<xforms:var name="total" select="ceiling($numFound div $limit)"/>
							
							<!-- pagination -->
							<div class="paging_div row">
								<div class="col-md-6"> Displaying records <b>
										<xforms:output value="(($page - 1) * $limit) + 1"/>
									</b> to <b>
										<xforms:output value="if ($numFound &gt; $page * $limit) then $page * $limit else $numFound"/>
									</b> of <b>
										<xforms:output value="$numFound"/>
									</b> total results.</div>
								<div class="col-md-6 page-nos">
									<!-- previous -->
									<xforms:group ref=".[$page &gt; 1]">
										<xforms:trigger>
											<xforms:label>
												<span class="glyphicon glyphicon-fast-backward"></span>
											</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="instance('control-instance')/page">1</xforms:setvalue>
												<xforms:setvalue ref="instance('control-instance')/offset" value="(number(instance('control-instance')/page) - 1) * number(instance('control-instance')/limit)"/>
												<xforms:setvalue ref="instance('sparqlQuery')"
													value="replace(instance('sparqlQueries')/query[@id='query-all'], '%OFFSET%', instance('control-instance')/offset)"/>
												<xforms:delete nodeset="instance('sparqlResponse')/*"/>
												<xforms:send submission="submit-sparqlQuery"/>
											</xforms:action>
										</xforms:trigger>
										<xforms:trigger>
											<xforms:label>
												<span class="glyphicon glyphicon-backward"></span>
											</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="instance('control-instance')/page" value="$previous"/>
												<xforms:setvalue ref="instance('control-instance')/offset" value="(number(instance('control-instance')/page) - 1) * number(instance('control-instance')/limit)"/>
												<xforms:setvalue ref="instance('sparqlQuery')"
													value="replace(instance('sparqlQueries')/query[@id='query-all'], '%OFFSET%', instance('control-instance')/offset)"/>
												<xforms:delete nodeset="instance('sparqlResponse')/*"/>
												<xforms:send submission="submit-sparqlQuery"/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
									<xforms:group ref=".[$page = 1]">
										<a class="btn btn-default disabled" title="First" href="#">
											<span class="glyphicon glyphicon-fast-backward"></span>
										</a>
										<a class="btn btn-default disabled" title="Previous" href="#">
											<span class="glyphicon glyphicon-backward"></span>
										</a>
									</xforms:group>
									<!-- current-->
									<button type="button" class="btn btn-default">
										<b>
											<xforms:output value="$current"/>
										</b>
									</button>
									<!-- next -->
									<xforms:group ref=".[$total &gt; $current]">
										<xforms:trigger>
											<xforms:label>
												<span class="glyphicon glyphicon-forward"></span>
											</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="instance('control-instance')/page" value="$next"/>
												<xforms:setvalue ref="instance('control-instance')/offset" value="(number(instance('control-instance')/page) - 1) * number(instance('control-instance')/limit)"/>
												<xforms:setvalue ref="instance('sparqlQuery')"
													value="replace(instance('sparqlQueries')/query[@id='query-all'], '%OFFSET%', instance('control-instance')/offset)"/>
												<xforms:delete nodeset="instance('sparqlResponse')/*"/>
												<xforms:send submission="submit-sparqlQuery"/>
											</xforms:action>
										</xforms:trigger>
										<xforms:trigger>
											<xforms:label>
												<span class="glyphicon glyphicon-fast-forward"></span>
											</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="instance('control-instance')/page" value="$total"/>
												<xforms:setvalue ref="instance('control-instance')/offset" value="(number(instance('control-instance')/page) - 1) * number(instance('control-instance')/limit)"/>
												<xforms:setvalue ref="instance('sparqlQuery')"
													value="replace(instance('sparqlQueries')/query[@id='query-all'], '%OFFSET%', instance('control-instance')/offset)"/>
												<xforms:delete nodeset="instance('sparqlResponse')/*"/>
												<xforms:send submission="submit-sparqlQuery"/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
									<xforms:group ref=".[not($total &gt; $current)]">
										<a class="btn btn-default disabled" title="Next" href="#">
											<span class="glyphicon glyphicon-forward"></span>
										</a>
										<a class="btn btn-default disabled" href="#">
											<span class="glyphicon glyphicon-fast-forward"></span>
										</a>
									</xforms:group>
								</div>
							</div>
							<div class="row">
								<div class="col-md-12">
									<table class="table">
										<thead>
											<tr>
												<th style="width:80%">ID</th>
												<th style="width:10%">View</th>
												<th style="width:10%">Delete</th>
											</tr>
										</thead>
										<tbody>
											<xforms:repeat nodeset="descendant::res:result">
												<xforms:var name="id" select="tokenize(res:binding[@name='uri']/res:uri, '/')[last()]"/>
												<tr>
													<td>
														<h4>
															<xforms:trigger appearance="minimal">
																<xforms:label ref="res:binding[@name='label']/res:literal"/>
																<xforms:action ev:event="DOMActivate">
																	<xforms:load show="replace" resource="edit/?id={$id}"/>
																</xforms:action>
															</xforms:trigger>
														</h4>
														<p>
															<xforms:output ref="res:binding[@name='definition']">
																<xforms:label>Definition</xforms:label>
															</xforms:output>
														</p>
														<xforms:output ref="res:binding[@name='type']/res:uri">
															<xforms:label>Class</xforms:label>
														</xforms:output>
													</td>
													<td class="text-center">
														<a href="{instance('config')/url}id/{$id}" target="_blank">html</a>
													</td>
													<td class="text-center">
														<xforms:trigger appearance="minimal">
															<xforms:label>
																<span class="glyphicon glyphicon-remove"></span>
															</xforms:label>
															<xforms:action ev:event="DOMActivate">
																<xforms:setvalue ref="instance('control-instance')/id" value="$id"/>
																<xforms:dispatch target="delete-id-dialog" name="fr-show"/>
															</xforms:action>
														</xforms:trigger>
													</td>
												</tr>
											</xforms:repeat>
										</tbody>
									</table>
								</div>
							</div>
						</xforms:group>
						<!--<xforms:group ref=".[$numFound = 0]">
							<xforms:group ref=".[instance('control-instance')/solr-query = '*:*']">
								<h1>No ids found in <xforms:output value="instance('config')/data_path"/></h1>
							</xforms:group>
							<xforms:group ref=".[instance('control-instance')/solr-query != '*:*']">
								<h1>No objects that match query: <xforms:output ref="instance('control-instance')/solr-query"/>
									<small>
										<xforms:trigger appearance="minimal">
											<xforms:label>clear</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="instance('control-instance')/solr-query">*:*</xforms:setvalue>
												<xforms:setvalue ref="instance('control-instance')/page">1</xforms:setvalue>
												<xforms:send submission="query-solr"/>
											</xforms:action>
										</xforms:trigger>
									</small>
								</h1>
							</xforms:group>
						</xforms:group>-->
					</xforms:group>
					<!--<fr:xforms-inspector/>-->
				</div>
				<div class="col-md-3">
					<h2>Actions</h2>
					<div>
						<h3>Import Data</h3>
						<ul>
							<li>
								<a href="import/">Import/Update IDs</a>
							</li>
						</ul>
						<ul>
							<li>
								<a href="manage/">Manage Data Dumps</a>
							</li>
						</ul>
					</div>
					<div>
						<h3>Editors</h3>
						<ul>
							<li>
								<a href="editors/">Manage Kerameikos Editors</a>
							</li>
						</ul>
					</div>
					<div>
						<h3>Kerameikos Data</h3>
						<ul>
							<li>
								<xforms:trigger appearance="minimal">
									<xforms:label>Refresh Triplestore</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<xforms:dispatch target="refresh-triplestore-dialog" name="fr-show"/>
									</xforms:action>
								</xforms:trigger>
							</li>
							<li>
								<xforms:trigger appearance="minimal">
									<xforms:label>Flush and Reload Index</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<xforms:dispatch target="solr-dialog" name="fr-show"/>
									</xforms:action>
								</xforms:trigger>
							</li>
							<!--<li>
								<xforms:trigger appearance="minimal">
									<xforms:label>Generate RDF/XML</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<xforms:dispatch target="generate-rdf-dump-dialog" name="fr-show"/>
									</xforms:action>
								</xforms:trigger>
							</li>-->
						</ul>
					</div>					
				</div>
			</div>
		</div>
		<!-- *********** DIALOGS *********** -->
		<fr:alert-dialog id="generate-rdf-dump-dialog">
			<fr:label>Generate RDF/XML</fr:label>
			<fr:message>This process to generate the RDF/XML dump may take several minutes. Continue?</fr:message>
			<fr:positive-choice>
				<fr:label>Yes</fr:label>
				<xforms:action ev:event="DOMActivate">
					<!-- generate RDF/XML via web service -->
					<xforms:send submission="generate-rdf-xml"/>
				</xforms:action>
			</fr:positive-choice>
			<fr:negative-choice>
				<fr:label>No</fr:label>
			</fr:negative-choice>
		</fr:alert-dialog>
		<fr:alert-dialog id="refresh-triplestore-dialog">
			<fr:label>Refresh Triplestore</fr:label>
			<fr:message>This will refresh the Kerameikos data in the triplestore. It may cause momentary loss of SPARQL functionality. Continue?</fr:message>
			<fr:positive-choice>
				<fr:label>Yes</fr:label>
				<xforms:action ev:event="DOMActivate">
					<!-- first delete all Kerameikos concepts -->
					<xforms:setvalue ref="instance('sparqlUpdate')" value="instance('sparqlUpdate-templates')/query[@id='delete-all-ids']"/>
					<xforms:send submission="delete-graph"/>
					<!-- then get the current RDF/XML and post it -->
					<xforms:action ev:event="xforms-submit-done">
						<xforms:send submission="load-all-rdf"/>
						<xforms:send submission="post-new" ev:event="xforms-submit-done"/>
					</xforms:action>
				</xforms:action>
			</fr:positive-choice>
			<fr:negative-choice>
				<fr:label>No</fr:label>
			</fr:negative-choice>
		</fr:alert-dialog>
		<fr:alert-dialog id="solr-dialog">
			<fr:label>Flush and Reload Solr Index</fr:label>
			<fr:message>This will flush the Solr main and fuseki indices and reload all Kerameikos ids. It may take several minutes. Continue?</fr:message>
			<fr:positive-choice>
				<fr:label>Yes</fr:label>
				<xforms:action ev:event="DOMActivate">
					<!-- delete all objects -->
					<xforms:send submission="delete-all"></xforms:send>
					
					<!-- load Solr add doc by calling a pipeline -->
					<xforms:send submission="load-all-solr"></xforms:send>
					<xforms:action ev:event="xforms-submit-done">						
						<xforms:send submission="post-to-solr"></xforms:send>
						<xforms:send submission="optimize" ev:event="xforms-submit-done"/>
					</xforms:action>
				</xforms:action>
			</fr:positive-choice>
			<fr:negative-choice>
				<fr:label>No</fr:label>
			</fr:negative-choice>
		</fr:alert-dialog>
		<fr:alert-dialog id="delete-id-dialog">
			<fr:label>Delete Kerameikos ID</fr:label>
			<fr:message>Are you sure you want to continue with the deletion of this ID?</fr:message>
			<fr:positive-choice>
				<fr:label>Yes</fr:label>
				<xforms:action ev:event="DOMActivate">
					<xforms:setvalue ref="instance('control-instance')/solr-core" value="instance('config')/solr_published"/>
					<!-- purge from the triplestore -->
					<xforms:setvalue ref="instance('sparqlUpdate')"
						value="replace(instance('sparqlUpdate-templates')/query[@id='delete-id'], 'URI', concat('https://kerameikos.org/id/', instance('control-instance')/id))"/>
					<xforms:send submission="delete-graph"/>
					<!-- delete from Solr -->
					<xforms:setvalue ref="instance('deleteId')/id" value="instance('control-instance')/id"/>
					<xforms:send submission="delete-id-from-solr"/>
					<!-- delete the RDF file from the disk -->
					<xforms:setvalue ref="instance('delete-config')/delete/url"
						value="concat(instance('config')/data_path, '/id/',  instance('control-instance')/id, '.rdf')"/>
					<xforms:insert nodeset="instance('dump')"
						origin="xxforms:call-xpl('oxf:/apps/kerameikos/xpl/xforms/delete-id.xpl', 'configuration', instance('delete-config'), 'data')"/>
					<xforms:setvalue ref="instance('control-instance')/status">ID successfully deleted from system.</xforms:setvalue>
					<!-- reset the search -->
					<xforms:setvalue ref="instance('control-instance')/page">1</xforms:setvalue>
					<xforms:send submission="query-solr"/>
				</xforms:action>
			</fr:positive-choice>
			<fr:negative-choice>
				<fr:label>No</fr:label>
			</fr:negative-choice>
		</fr:alert-dialog>
	</body>
</html>
